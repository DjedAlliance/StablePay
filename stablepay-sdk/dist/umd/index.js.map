{"version":3,"file":"index.js","sources":["../../node_modules/react-dom/client.js","../../src/core/wallets/MetaMaskAdapter.js","../../node_modules/dotenv/lib/main.js","../../src/core/wallets/WalletConnectAdapter.js","../../src/core/wallets/CoinbaseWalletAdapter.js","../../src/core/WalletProvider.js","../../src/contexts/WalletContext.jsx","../../src/styles/theme.js","../../src/contexts/ThemeContext.jsx","../../src/widget/PayButton.jsx","../../src/widget/Dialog.jsx","../../src/core/TokenSelector.js","../../src/contexts/NetworkContext.jsx","../../src/widget/NetworkDropdown.jsx","../../src/core/Transaction.js","../../src/widget/TokenDropdown.jsx","../../src/services/GasEstimationService.js","../../src/widget/TransactionFee.jsx","../../src/widget/Widget.jsx","../../src/utils/config.js","../../src/core/MerchantConfig.js","../../src/core/NetworkSelector.js","../../src/index.js"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createWalletClient, custom } from 'viem';\r\nimport { mainnet, sepolia } from 'viem/chains';\r\n\r\n/**\r\n * @class MetaMaskAdapter\r\n * @description Manages the connection to the MetaMask wallet.\r\n */\r\nexport class MetaMaskAdapter {\r\n  constructor() {\r\n    this.client = null;\r\n    this.account = null;\r\n    this.chainId = null;\r\n    this.name = 'MetaMask';\r\n  }\r\n\r\n  /**\r\n   * Checks if MetaMask is installed and available.\r\n   * @returns {boolean} True if MetaMask is available, false otherwise.\r\n   */\r\n  isAvailable() {\r\n    return !!window.ethereum && window.ethereum.isMetaMask;\r\n  }\r\n\r\n  /**\r\n   * Connects to the MetaMask wallet.\r\n   * @param {number} chainId - The ID of the chain to connect to.\r\n   * @returns {Promise<{client: object, account: string, chainId: number}>} The wallet client, account address, and chain ID.\r\n   */\r\n  async connect(chainId) {\r\n    if (!this.isAvailable()) {\r\n      throw new Error('MetaMask is not installed or not available.');\r\n    }\r\n\r\n    try {\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      const client = createWalletClient({\r\n        chain: this.getChainConfig(chainId),\r\n        transport: custom(window.ethereum),\r\n      });\r\n\r\n      this.client = client;\r\n      this.account = accounts[0];\r\n      this.chainId = chainId;\r\n\r\n      return {\r\n        client: this.client,\r\n        account: this.account,\r\n        chainId: this.chainId,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error connecting to MetaMask:', error);\r\n      throw new Error('Failed to connect to MetaMask.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnects from the wallet.\r\n   */\r\n  async disconnect() {\r\n    this.client = null;\r\n    this.account = null;\r\n    this.chainId = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the wallet client instance.\r\n   * @returns {object|null} The viem wallet client.\r\n   */\r\n  getClient() {\r\n    return this.client;\r\n  }\r\n\r\n  /**\r\n   * Gets the connected account address.\r\n   * @returns {string|null} The account address.\r\n   */\r\n  getAccount() {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * Gets the current chain ID.\r\n   * @returns {number|null} The chain ID.\r\n   */\r\n  getChainId() {\r\n    return this.chainId;\r\n  }\r\n\r\n  /**\r\n   * Gets the chain configuration from a chain ID.\r\n   * @private\r\n   */\r\n  getChainConfig(chainId) {\r\n    const chains = {\r\n      1: mainnet,\r\n      11155111: sepolia,\r\n    };\r\n    const chain = chains[chainId];\r\n    if (!chain) {\r\n      throw new Error(`Unsupported chain ID: ${chainId}`);\r\n    }\r\n    return chain;\r\n  }\r\n}","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\n// Array of tips to display randomly\nconst TIPS = [\n  'üîê encrypt with Dotenvx: https://dotenvx.com',\n  'üîê prevent committing .env to code: https://dotenvx.com/precommit',\n  'üîê prevent building .env in docker: https://dotenvx.com/prebuild',\n  'üì° add observability to secrets: https://dotenvx.com/ops',\n  'üë• sync secrets across teammates & machines: https://dotenvx.com/ops',\n  'üóÇÔ∏è backup and recover secrets: https://dotenvx.com/ops',\n  '‚úÖ audit secrets and track compliance: https://dotenvx.com/ops',\n  'üîÑ add secrets lifecycle management: https://dotenvx.com/ops',\n  'üîë add access controls to secrets: https://dotenvx.com/ops',\n  'üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`',\n  '‚öôÔ∏è  specify custom .env file path with { path: \\'/custom/path/.env\\' }',\n  '‚öôÔ∏è  enable debug logging with { debug: true }',\n  '‚öôÔ∏è  override existing env vars with { override: true }',\n  '‚öôÔ∏è  suppress all logs with { quiet: true }',\n  '‚öôÔ∏è  write to custom object with { processEnv: myObject }',\n  '‚öôÔ∏è  load multiple .env files with { path: [\\'.env.local\\', \\'.env\\'] }'\n]\n\n// Get a random tip from the tips array\nfunction _getRandomTip () {\n  return TIPS[Math.floor(Math.random() * TIPS.length)]\n}\n\nfunction parseBoolean (value) {\n  if (typeof value === 'string') {\n    return !['false', '0', 'no', 'off', ''].includes(value.toLowerCase())\n  }\n  return Boolean(value)\n}\n\nfunction supportsAnsi () {\n  return process.stdout.isTTY // && process.env.TERM !== 'dumb'\n}\n\nfunction dim (text) {\n  return supportsAnsi() ? `\\x1b[2m${text}\\x1b[0m` : text\n}\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  options = options || {}\n\n  const vaultPath = _vaultPath(options)\n  options.path = vaultPath // parse .env.vault\n  const result = DotenvModule.configDotenv(options)\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _warn (message) {\n  console.error(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  const debug = parseBoolean(process.env.DOTENV_CONFIG_DEBUG || (options && options.debug))\n  const quiet = parseBoolean(process.env.DOTENV_CONFIG_QUIET || (options && options.quiet))\n\n  if (debug || !quiet) {\n    _log('Loading env from encrypted .env.vault')\n  }\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n  let debug = parseBoolean(processEnv.DOTENV_CONFIG_DEBUG || (options && options.debug))\n  let quiet = parseBoolean(processEnv.DOTENV_CONFIG_QUIET || (options && options.quiet))\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  const populated = DotenvModule.populate(processEnv, parsedAll, options)\n\n  // handle user settings DOTENV_CONFIG_ options inside .env file(s)\n  debug = parseBoolean(processEnv.DOTENV_CONFIG_DEBUG || debug)\n  quiet = parseBoolean(processEnv.DOTENV_CONFIG_QUIET || quiet)\n\n  if (debug || !quiet) {\n    const keysCount = Object.keys(populated).length\n    const shortPaths = []\n    for (const filePath of optionPaths) {\n      try {\n        const relative = path.relative(process.cwd(), filePath)\n        shortPaths.push(relative)\n      } catch (e) {\n        if (debug) {\n          _debug(`Failed to load ${filePath} ${e.message}`)\n        }\n        lastError = e\n      }\n    }\n\n    _log(`injecting env (${keysCount}) from ${shortPaths.join(',')} ${dim(`-- tip: ${_getRandomTip()}`)}`)\n  }\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n  const populated = {}\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n        populated[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n      populated[key] = parsed[key]\n    }\n  }\n\n  return populated\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","import { createWalletClient, custom } from 'viem';\r\nimport { mainnet, sepolia } from 'viem/chains';\r\nimport { EthereumProvider } from '@walletconnect/ethereum-provider';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n/**\r\n * @class WalletConnectAdapter\r\n * @description Manages the connection to WalletConnect.\r\n */\r\nexport class WalletConnectAdapter {\r\n  constructor() {\r\n    this.provider = null;\r\n    this.client = null;\r\n    this.account = null;\r\n    this.chainId = null;\r\n    this.name = 'WalletConnect';\r\n  }\r\n\r\n  /**\r\n   * Checks if WalletConnect is available (it's a protocol, so it's always available).\r\n   * @returns {boolean} True.\r\n   */\r\n  isAvailable() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Connects to a wallet using WalletConnect.\r\n   * @param {number} chainId - The ID of the chain to connect to.\r\n   * @returns {Promise<{client: object, account: string, chainId: number}>} The wallet client, account address, and chain ID.\r\n   */\r\n  async connect(chainId) {\r\n    const projectId = process.env.PROJECT_ID;\r\n    if (!projectId) {\r\n      throw new Error('WalletConnect projectId is not configured.');\r\n    }\r\n\r\n    try {\r\n      this.provider = await EthereumProvider.init({\r\n        projectId,\r\n        chains: [chainId],\r\n        showQrModal: true,\r\n      });\r\n\r\n      await this.provider.enable();\r\n\r\n      const client = createWalletClient({\r\n        chain: this.getChainConfig(chainId),\r\n        transport: custom(this.provider),\r\n      });\r\n\r\n      const accounts = await client.getAddresses();\r\n      \r\n      this.client = client;\r\n      this.account = accounts[0];\r\n      this.chainId = chainId;\r\n\r\n      return {\r\n        client: this.client,\r\n        account: this.account,\r\n        chainId: this.chainId,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error connecting to WalletConnect:', error);\r\n      throw new Error('Failed to connect with WalletConnect.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnects from the wallet.\r\n   */\r\n  async disconnect() {\r\n    if (this.provider) {\r\n      await this.provider.disconnect();\r\n    }\r\n    this.provider = null;\r\n    this.client = null;\r\n    this.account = null;\r\n    this.chainId = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the wallet client instance.\r\n   * @returns {object|null} The viem wallet client.\r\n   */\r\n  getClient() {\r\n    return this.client;\r\n  }\r\n\r\n  /**\r\n   * Gets the connected account address.\r\n   * @returns {string|null} The account address.\r\n   */\r\n  getAccount() {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * Gets the current chain ID.\r\n   * @returns {number|null} The chain ID.\r\n   */\r\n  getChainId() {\r\n    return this.chainId;\r\n  }\r\n  \r\n  /**\r\n   * Gets the chain configuration from a chain ID.\r\n   * @private\r\n   */\r\n  getChainConfig(chainId) {\r\n    const chains = {\r\n      1: mainnet,\r\n      11155111: sepolia,\r\n    };\r\n    const chain = chains[chainId];\r\n    if (!chain) {\r\n      throw new Error(`Unsupported chain ID: ${chainId}`);\r\n    }\r\n    return chain;\r\n  }\r\n}","import { createWalletClient, custom } from 'viem';\r\nimport { mainnet, sepolia } from 'viem/chains';\r\n\r\n/**\r\n * @class CoinbaseWalletAdapter\r\n * @description Manages the connection to the Coinbase Wallet.\r\n */\r\nexport class CoinbaseWalletAdapter {\r\n  constructor() {\r\n    this.client = null;\r\n    this.account = null;\r\n    this.chainId = null;\r\n    this.name = 'Coinbase Wallet';\r\n  }\r\n\r\n  /**\r\n   * Checks if the Coinbase Wallet extension is installed and available.\r\n   * @returns {boolean} True if Coinbase Wallet is available, false otherwise.\r\n   */\r\n  isAvailable() {\r\n    return !!window.ethereum && (window.ethereum.isCoinbaseWallet || (window.ethereum.providers && window.ethereum.providers.find(p => p.isCoinbaseWallet)));\r\n  }\r\n\r\n  /**\r\n   * Gets the injected Coinbase Wallet provider.\r\n   * @private\r\n   */\r\n  getProvider() {\r\n    if (!this.isAvailable()) {\r\n      return null;\r\n    }\r\n    if (window.ethereum.isCoinbaseWallet) {\r\n      return window.ethereum;\r\n    }\r\n    // If multiple wallets are injected, find the Coinbase Wallet provider\r\n    return window.ethereum.providers.find(p => p.isCoinbaseWallet);\r\n  }\r\n\r\n  /**\r\n   * Connects to the Coinbase Wallet.\r\n   * @param {number} chainId - The ID of the chain to connect to.\r\n   * @returns {Promise<{client: object, account: string, chainId: number}>} The wallet client, account address, and chain ID.\r\n   */\r\n  async connect(chainId) {\r\n    const provider = this.getProvider();\r\n    if (!provider) {\r\n      throw new Error('Coinbase Wallet is not installed or not available.');\r\n    }\r\n\r\n    try {\r\n      const accounts = await provider.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      const client = createWalletClient({\r\n        chain: this.getChainConfig(chainId),\r\n        transport: custom(provider),\r\n      });\r\n\r\n      this.client = client;\r\n      this.account = accounts[0];\r\n      this.chainId = chainId;\r\n\r\n      return {\r\n        client: this.client,\r\n        account: this.account,\r\n        chainId: this.chainId,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error connecting to Coinbase Wallet:', error);\r\n      throw new Error('Failed to connect to Coinbase Wallet.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnects from the wallet.\r\n   */\r\n  async disconnect() {\r\n    this.client = null;\r\n    this.account = null;\r\n    this.chainId = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the wallet client instance.\r\n   * @returns {object|null} The viem wallet client.\r\n   */\r\n  getClient() {\r\n    return this.client;\r\n  }\r\n\r\n  /**\r\n   * Gets the connected account address.\r\n   * @returns {string|null} The account address.\r\n   */\r\n  getAccount() {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * Gets the current chain ID.\r\n   * @returns {number|null} The chain ID.\r\n   */\r\n  getChainId() {\r\n    return this.chainId;\r\n  }\r\n\r\n  /**\r\n   * Gets the chain configuration from a chain ID.\r\n   * @private\r\n   */\r\n  getChainConfig(chainId) {\r\n    const chains = {\r\n      1: mainnet,\r\n      11155111: sepolia,\r\n    };\r\n    const chain = chains[chainId];\r\n    if (!chain) {\r\n      throw new Error(`Unsupported chain ID: ${chainId}`);\r\n    }\r\n    return chain;\r\n  }\r\n}","import { MetaMaskAdapter } from './wallets/MetaMaskAdapter';\r\nimport { WalletConnectAdapter } from './wallets/WalletConnectAdapter';\r\nimport { CoinbaseWalletAdapter } from './wallets/CoinbaseWalletAdapter';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst SESSION_STORAGE_KEY = 'stablepay_wallet_session';\r\nconst ENCRYPTION_KEY = 'stablepay-super-secret-key'; // This should be handled more securely in a real app\r\nconst SESSION_TIMEOUT = 24 * 60 * 60 * 1000; // 24 hours\r\n\r\n/**\r\n * @class WalletProvider\r\n * @description Manages connections to different crypto wallets and persists the session.\r\n */\r\nexport class WalletProvider {\r\n  constructor(chainId) {\r\n    this.chainId = chainId;\r\n    this.adapters = {\r\n      metamask: new MetaMaskAdapter(),\r\n      walletconnect: new WalletConnectAdapter(),\r\n      coinbase: new CoinbaseWalletAdapter(),\r\n    };\r\n    this.activeAdapter = null;\r\n    this.client = null;\r\n    this.account = null;\r\n  }\r\n\r\n  /**\r\n   * Connects to a specified wallet.\r\n   * @param {string} walletName - The name of the wallet to connect to ('metamask', 'walletconnect', 'coinbase').\r\n   * @returns {Promise<{client: object, account: string}>}\r\n   */\r\n  async connect(walletName) {\r\n    const adapter = this.adapters[walletName.toLowerCase()];\r\n    if (!adapter) {\r\n      throw new Error(`Wallet \"${walletName}\" is not supported.`);\r\n    }\r\n\r\n    if (!adapter.isAvailable()) {\r\n      throw new Error(`Wallet \"${walletName}\" is not available.`);\r\n    }\r\n\r\n    const { client, account, chainId } = await adapter.connect(this.chainId);\r\n    this.activeAdapter = adapter;\r\n    this.client = client;\r\n    this.account = account;\r\n\r\n    this.saveSession(walletName);\r\n\r\n    return { client, account, chainId };\r\n  }\r\n\r\n  /**\r\n   * Disconnects from the currently active wallet.\r\n   */\r\n  async disconnect() {\r\n    if (this.activeAdapter) {\r\n      await this.activeAdapter.disconnect();\r\n    }\r\n    this.clearSession();\r\n    this.activeAdapter = null;\r\n    this.client = null;\r\n    this.account = null;\r\n  }\r\n\r\n  /**\r\n   * Saves the current wallet session to localStorage.\r\n   * @private\r\n   */\r\n  saveSession(walletName) {\r\n    const session = {\r\n      walletName,\r\n      timestamp: Date.now(),\r\n    };\r\n    const encryptedSession = CryptoJS.AES.encrypt(JSON.stringify(session), ENCRYPTION_KEY).toString();\r\n    localStorage.setItem(SESSION_STORAGE_KEY, encryptedSession);\r\n  }\r\n\r\n  /**\r\n   * Clears the wallet session from localStorage.\r\n   */\r\n  clearSession() {\r\n    localStorage.removeItem(SESSION_STORAGE_KEY);\r\n  }\r\n\r\n  /**\r\n   * Restores a wallet session if a valid one exists.\r\n   * @returns {Promise<{client: object, account: string} | null>}\r\n   */\r\n  async restoreSession() {\r\n    const encryptedSession = localStorage.getItem(SESSION_STORAGE_KEY);\r\n    if (!encryptedSession) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const bytes = CryptoJS.AES.decrypt(encryptedSession, ENCRYPTION_KEY);\r\n      const decryptedSession = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n      if (Date.now() - decryptedSession.timestamp > SESSION_TIMEOUT) {\r\n        this.clearSession();\r\n        return null;\r\n      }\r\n\r\n      return await this.connect(decryptedSession.walletName);\r\n    } catch (error) {\r\n      console.error('Failed to restore session:', error);\r\n      this.clearSession();\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the currently active wallet client.\r\n   * @returns {object|null}\r\n   */\r\n  getClient() {\r\n    return this.client;\r\n  }\r\n\r\n  /**\r\n   * Gets the currently connected account.\r\n   * @returns {string|null}\r\n   */\r\n  getAccount() {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * Gets the list of available wallet adapters.\r\n   * @returns {Array<object>}\r\n   */\r\n  getAvailableWallets() {\r\n    return Object.values(this.adapters)\r\n      .filter(adapter => adapter.isAvailable())\r\n      .map(adapter => ({ name: adapter.name, id: adapter.name.toLowerCase().replace(' ', '') }));\r\n  }\r\n}","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport { WalletProvider as WalletProviderClass } from '../core/WalletProvider';\r\n\r\nconst WalletContext = createContext(null);\r\n\r\n/**\r\n * Custom hook to access the wallet context.\r\n * @returns {{\r\n *  client: object | null,\r\n *  account: string | null,\r\n *  error: string | null,\r\n *  isConnecting: boolean,\r\n *  isLoading: boolean,\r\n *  connect: (walletName: string) => Promise<boolean>,\r\n *  disconnect: () => Promise<void>,\r\n *  getAvailableWallets: () => Array<{name: string, id: string}>\r\n * }}\r\n */\r\nexport const useWallet = () => {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('useWallet must be used within a WalletContextProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Provider component for the wallet context.\r\n * Manages wallet state and connection logic.\r\n * @param {{children: React.ReactNode, chainId: number}} props\r\n */\r\nexport const WalletContextProvider = ({ children, chainId }) => {\r\n  const [walletProvider] = useState(() => new WalletProviderClass(chainId));\r\n  const [client, setClient] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true); // For initial session restoration\r\n\r\n  const connect = useCallback(async (walletName) => {\r\n    setIsConnecting(true);\r\n    setError(null);\r\n    try {\r\n      const { client: newClient, account: newAccount } = await walletProvider.connect(walletName);\r\n      setClient(newClient);\r\n      setAccount(newAccount);\r\n      return true;\r\n    } catch (err) {\r\n      console.error(`Error connecting with ${walletName}:`, err);\r\n      setError(err.message);\r\n      return false;\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  }, [walletProvider]);\r\n\r\n  const disconnect = useCallback(async () => {\r\n    await walletProvider.disconnect();\r\n    setClient(null);\r\n    setAccount(null);\r\n  }, [walletProvider]);\r\n  \r\n  // Attempt to restore session on initial load\r\n  useEffect(() => {\r\n    const restore = async () => {\r\n      try {\r\n        const session = await walletProvider.restoreSession();\r\n        if (session) {\r\n          setClient(session.client);\r\n          setAccount(session.account);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error restoring session:', err);\r\n        setError('Could not restore wallet session.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    restore();\r\n  }, [walletProvider]);\r\n\r\n  const value = {\r\n    client,\r\n    account,\r\n    error,\r\n    isConnecting,\r\n    isLoading,\r\n    connect,\r\n    disconnect,\r\n    getAvailableWallets: () => walletProvider.getAvailableWallets(),\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider value={value}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n};","/**\r\n * @file theme.js\r\n * @description Defines the default light and dark themes for the SDK.\r\n */\r\n\r\nexport const defaultThemes = {\r\n  light: {\r\n    '--sp-bg-primary': '#ffffff',\r\n    '--sp-bg-secondary': '#f7f7f7',\r\n    '--sp-bg-tertiary': '#e0e0e0',\r\n    '--sp-text-primary': '#1a1a1a',\r\n    '--sp-text-secondary': '#555555',\r\n    '--sp-accent-primary': '#f7941d', // Example: StablePay orange\r\n    '--sp-accent-secondary': '#bc5f26',\r\n    '--sp-border-primary': '#dddddd',\r\n    '--sp-error': '#d9534f',\r\n    '--sp-success': '#5cb85c',\r\n  },\r\n  dark: {\r\n    '--sp-bg-primary': '#1a1a1a',\r\n    '--sp-bg-secondary': '#2a2a2a',\r\n    '--sp-bg-tertiary': '#3a3a3a',\r\n    '--sp-text-primary': '#ffffff',\r\n    '--sp-text-secondary': '#aaaaaa',\r\n    '--sp-accent-primary': '#f7941d',\r\n    '--sp-accent-secondary': '#bc5f26',\r\n    '--sp-border-primary': '#444444',\r\n    '--sp-error': '#d9534f',\r\n    '--sp-success': '#5cb85c',\r\n  },\r\n};","import React, { createContext, useContext, useState, useEffect, useMemo } from 'react';\r\nimport { defaultThemes } from '../styles/theme';\r\n\r\nconst ThemeContext = createContext(null);\r\n\r\n/**\r\n * Custom hook to access the theme context.\r\n * @returns {{\r\n *  themeMode: ('light'|'dark'|'auto'),\r\n *  setTheme: (mode: 'light'|'dark'|'auto') => void\r\n * }}\r\n */\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Provider component for the theme context.\r\n * Manages the application's theme and applies it.\r\n * @param {{\r\n *  children: React.ReactNode,\r\n *  themeConfig?: {\r\n *    mode?: 'light'|'dark'|'auto',\r\n *    customTheme?: object\r\n *  }\r\n * }} props\r\n */\r\nexport const ThemeProvider = ({ children, themeConfig = {} }) => {\r\n  const { mode: initialMode = 'auto', customTheme = {} } = themeConfig;\r\n  const [themeMode, setThemeMode] = useState(initialMode);\r\n\r\n  const mergedThemes = useMemo(() => {\r\n    // Deep merge custom theme into defaults\r\n    const merged = JSON.parse(JSON.stringify(defaultThemes)); // Deep copy\r\n    if (customTheme.light) {\r\n      Object.assign(merged.light, customTheme.light);\r\n    }\r\n    if (customTheme.dark) {\r\n      Object.assign(merged.dark, customTheme.dark);\r\n    }\r\n    return merged;\r\n  }, [customTheme]);\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    \r\n    const applyTheme = (mode) => {\r\n      const theme = mergedThemes[mode];\r\n      Object.keys(theme).forEach(key => {\r\n        root.style.setProperty(key, theme[key]);\r\n      });\r\n      root.setAttribute('data-theme', mode);\r\n    };\r\n\r\n    const handleSystemThemeChange = (e) => {\r\n      const newMode = e.matches ? 'dark' : 'light';\r\n      // Only apply if mode is still 'auto'\r\n      if (themeMode === 'auto') {\r\n        applyTheme(newMode);\r\n      }\r\n    };\r\n\r\n    if (themeMode === 'auto') {\r\n      const systemThemeMatcher = window.matchMedia('(prefers-color-scheme: dark)');\r\n      applyTheme(systemThemeMatcher.matches ? 'dark' : 'light');\r\n      systemThemeMatcher.addEventListener('change', handleSystemThemeChange);\r\n      return () => {\r\n        systemThemeMatcher.removeEventListener('change', handleSystemThemeChange);\r\n      };\r\n    } else {\r\n      applyTheme(themeMode);\r\n    }\r\n  }, [themeMode, mergedThemes]);\r\n\r\n  const setTheme = (mode) => {\r\n    if (['light', 'dark', 'auto'].includes(mode)) {\r\n      setThemeMode(mode);\r\n    } else {\r\n      console.warn(`Unsupported theme mode: ${mode}`);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    themeMode,\r\n    setTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};","import React from \"react\";\r\nimport styles from \"../styles/main.css\";\r\n\r\nconst PayButton = ({ onClick, size = \"medium\" }) => {\r\n  const sizeStyles = {\r\n    small: { width: \"200px\", height: \"50px\", fontSize: \"14px\" },\r\n    medium: { width: \"250px\", height: \"60px\", fontSize: \"16px\" },\r\n    large: { width: \"300px\", height: \"70px\", fontSize: \"18px\" },\r\n  };\r\n\r\n  const logoSizes = {\r\n    small: { width: \"35px\", height: \"33px\" },\r\n    medium: { width: \"40px\", height: \"38px\" },\r\n    large: { width: \"45px\", height: \"43px\" },\r\n  };\r\n\r\n  const buttonStyle = sizeStyles[size] || sizeStyles.medium;\r\n  const logoStyle = logoSizes[size] || logoSizes.medium;\r\n\r\n  return (\r\n    <button\r\n      className={styles.stablePayButton}\r\n      onClick={onClick}\r\n      style={buttonStyle}\r\n    >\r\n      <div className={styles.logo} style={logoStyle} />\r\n      <span className={styles.buttonText}>Pay with StablePay</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PayButton;\r\n","import React from 'react';\r\nimport styles from '../styles/PricingCard.css';\r\n\r\n\r\nconst Dialog = ({ children, onClose, size = 'medium' }) => {\r\n  return (\r\n    <div className={styles.dialogOverlay}>\r\n      <div className={`${styles.pricingCard} ${styles[size]}`}>\r\n        <button className={styles.dialogClose} onClick={onClose}>√ó</button>\r\n        <div className={styles.pricingCardHeader}>\r\n        <div className={styles.allianceLogo}></div>\r\n\r\n          <h2 className={styles.stablepayTitle}>StablePay</h2>\r\n        </div>\r\n        <div className={styles.pricingCardBody}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;","// TokenSelector.js\r\n\r\nexport class TokenSelector {\r\n  constructor(networkSelector) {\r\n    this.networkSelector = networkSelector;\r\n    this.selectedToken = null;\r\n  }\r\n\r\n  selectToken(tokenKey) {\r\n    const networkConfig = this.networkSelector.getSelectedNetworkConfig();\r\n    if (networkConfig && networkConfig.tokens[tokenKey]) {\r\n      this.selectedToken = {\r\n        key: tokenKey,\r\n        ...networkConfig.tokens[tokenKey]\r\n      };\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getSelectedToken() {\r\n    return this.selectedToken;\r\n  }\r\n\r\n  getAvailableTokens() {\r\n    const networkConfig = this.networkSelector.getSelectedNetworkConfig();\r\n    if (!networkConfig) return [];\r\n\r\n    return Object.entries(networkConfig.tokens).map(([key, config]) => ({\r\n      key,\r\n      ...config\r\n    }));\r\n  }\r\n\r\n  resetSelection() {\r\n    this.selectedToken = null;\r\n  }\r\n}","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { TokenSelector } from '../core/TokenSelector';\r\n\r\nconst NetworkContext = createContext();\r\n\r\nexport const NetworkProvider = ({ children, networkSelector }) => {\r\n  const [tokenSelector] = useState(() => new TokenSelector(networkSelector));\r\n  const [selectedNetwork, setSelectedNetwork] = useState(null);\r\n  const [selectedToken, setSelectedToken] = useState(null);\r\n  const [transactionDetails, setTransactionDetails] = useState(null);\r\n\r\n  const resetState = () => {\r\n    setSelectedToken(null);\r\n    setTransactionDetails(null);\r\n  };\r\n\r\n  const selectNetwork = (networkKey) => {\r\n    if (networkSelector.selectNetwork(networkKey)) {\r\n      setSelectedNetwork(networkKey);\r\n      resetState(); \r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const selectToken = (tokenKey) => {\r\n    if (tokenSelector.selectToken(tokenKey)) {\r\n      const token = tokenSelector.getSelectedToken();\r\n      setSelectedToken(token);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const resetSelections = () => {\r\n    networkSelector.selectNetwork(null);\r\n    setSelectedNetwork(null);\r\n    resetState();\r\n  };\r\n\r\n  // Synchronize context state with NetworkSelector\r\n  useEffect(() => {\r\n    setSelectedNetwork(networkSelector.selectedNetwork);\r\n  }, [networkSelector.selectedNetwork]);\r\n\r\n  return (\r\n    <NetworkContext.Provider value={{ \r\n      networkSelector,\r\n      tokenSelector,\r\n      selectedNetwork,\r\n      selectedToken,\r\n      transactionDetails,\r\n      setTransactionDetails,\r\n      selectNetwork,\r\n      selectToken,\r\n      resetSelections\r\n    }}>\r\n      {children}\r\n    </NetworkContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNetwork = () => {\r\n  const context = useContext(NetworkContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNetwork must be used within a NetworkProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default NetworkContext;","import React from 'react';\r\nimport { useNetwork } from '../contexts/NetworkContext';\r\nimport styles from '../styles/PricingCard.css';\r\n\r\nconst NetworkDropdown = () => {\r\n  const { networkSelector, selectedNetwork, selectNetwork } = useNetwork();\r\n\r\n  const handleNetworkChange = (event) => {\r\n    selectNetwork(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.selectField}>\r\n      <label htmlFor=\"network-select\">Select Network</label>\r\n      <select \r\n        id=\"network-select\"\r\n        onChange={handleNetworkChange} \r\n        value={selectedNetwork || \"\"}\r\n      >\r\n        <option value=\"\" disabled>Select a network</option>\r\n        {Object.keys(networkSelector.availableNetworks).map((networkKey) => (\r\n          <option key={networkKey} value={networkKey}>{networkKey}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NetworkDropdown;","import { getWeb3, getDjedContract, getCoinContracts, getDecimals,getOracleAddress,getOracleContract,tradeDataPriceBuySc } from 'djed-sdk';\r\n\r\nexport class Transaction {\r\n  constructor(networkUri, djedAddress) {\r\n    this.networkUri = networkUri;\r\n    this.djedAddress = djedAddress;\r\n  }\r\n\r\n  async init() {\r\n    if (!this.networkUri || !this.djedAddress) {\r\n      throw new Error('Network URI and DJED address are required');\r\n    }\r\n\r\n    try {\r\n      this.web3 = await getWeb3(this.networkUri);\r\n      this.djedContract = getDjedContract(this.web3, this.djedAddress);\r\n      const { stableCoin, reserveCoin } = await getCoinContracts(this.djedContract, this.web3);\r\n      const { scDecimals, rcDecimals } = await getDecimals(stableCoin, reserveCoin);\r\n      this.stableCoin = stableCoin;\r\n      this.reserveCoin = reserveCoin;\r\n      this.scDecimals = scDecimals;\r\n      this.rcDecimals = rcDecimals;\r\n\r\n      // Get the oracle contract\r\n      this.oracleContract = await getOracleAddress(this.djedContract).then((addr) =>\r\n        getOracleContract(this.web3, addr, this.djedContract._address)\r\n      );\r\n\r\n      this.oracleAddress = this.oracleContract._address;\r\n\r\n      console.log('Transaction initialized successfully');\r\n    } catch (error) {\r\n      console.error('Error initializing transaction:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getBlockchainDetails() {\r\n    return {\r\n      web3Available: !!this.web3,\r\n      djedContractAvailable: !!this.djedContract,\r\n      stableCoinAddress: this.stableCoin ? this.stableCoin._address : 'N/A',\r\n      reserveCoinAddress: this.reserveCoin ? this.reserveCoin._address : 'N/A',\r\n      stableCoinDecimals: this.scDecimals,\r\n      reserveCoinDecimals: this.rcDecimals,\r\n      oracleAddress: this.oracleAddress || 'N/A',\r\n      oracleContractAvailable: !!this.oracleContract,\r\n    };\r\n  }\r\n\r\n  async handleTradeDataBuySc(amountScaled) {\r\n    if (!this.djedContract) {\r\n      throw new Error(\"DJED contract is not initialized\");\r\n    }\r\n    if (typeof amountScaled !== 'string') {\r\n      throw new Error(\"Amount must be a string\");\r\n    }\r\n    try {\r\n      const result = await tradeDataPriceBuySc(this.djedContract, this.scDecimals, amountScaled);\r\n      return result.totalBCScaled;\r\n    } catch (error) {\r\n      console.error(\"Error fetching trade data for buying stablecoins: \", error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNetwork } from \"../contexts/NetworkContext\";\r\nimport { Transaction } from \"../core/Transaction\";\r\nimport styles from \"../styles/PricingCard.css\";\r\n\r\nconst TokenDropdown = () => {\r\n  const {\r\n    networkSelector,\r\n    tokenSelector,\r\n    selectedNetwork,\r\n    selectedToken,\r\n    selectToken,\r\n    setTransactionDetails,\r\n  } = useNetwork();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleTokenChange = async (event) => {\r\n    const newValue = event.target.value;\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      if (selectToken(newValue)) {\r\n        const networkConfig = networkSelector.getSelectedNetworkConfig();\r\n        const transaction = new Transaction(\r\n          networkConfig.uri,\r\n          networkConfig.djedAddress\r\n        );\r\n        await transaction.init();\r\n\r\n        const tokenAmount = networkSelector.getTokenAmount(newValue);\r\n        const blockchainDetails = transaction.getBlockchainDetails();\r\n\r\n        let tradeData = null;\r\n        if (newValue === \"native\") {\r\n          tradeData = await transaction.handleTradeDataBuySc(\r\n            String(tokenAmount)\r\n          );\r\n        }\r\n\r\n        setTransactionDetails({\r\n          network: selectedNetwork,\r\n          token: newValue,\r\n          tokenSymbol: tokenSelector.getSelectedToken().symbol,\r\n          amount: tokenAmount,\r\n          receivingAddress: networkSelector.getReceivingAddress(),\r\n          djedContractAddress: networkConfig.djedAddress,\r\n          isDirectTransfer:\r\n            tokenSelector.getSelectedToken().isDirectTransfer || false,\r\n          isNativeToken: tokenSelector.getSelectedToken().isNative || false,\r\n          tradeAmount: tradeData ? tradeData.amount : null,\r\n          ...blockchainDetails,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching transaction details:\", err);\r\n      setError(\"Failed to fetch transaction details. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const availableTokens = selectedNetwork\r\n    ? tokenSelector.getAvailableTokens()\r\n    : [];\r\n\r\n  return (\r\n    <div className={styles.selectField}>\r\n      <label htmlFor=\"token-select\">Select Token</label>\r\n      <select\r\n        id=\"token-select\"\r\n        onChange={handleTokenChange}\r\n        value={selectedToken ? selectedToken.key : \"\"}\r\n        disabled={!selectedNetwork || loading}\r\n      >\r\n        <option value=\"\" disabled>\r\n          {selectedNetwork\r\n            ? loading\r\n              ? \"Loading...\"\r\n              : \"Select a token\"\r\n            : \"Please select a network first\"}\r\n        </option>\r\n        {availableTokens.map((token) => (\r\n          <option key={token.key} value={token.key}>\r\n            {token.symbol} (\r\n            {token.isDirectTransfer ? \"Direct Transfer\" : \"Native\"})\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TokenDropdown;\r\n","import Web3 from 'web3';\r\n\r\n/**\r\n * @class GasEstimationService\r\n * @description Provides utility methods for gas price estimation and fee calculation.\r\n */\r\nexport class GasEstimationService {\r\n  /**\r\n   * @param {object} provider - An Ethereum provider instance (e.g., from a wallet client).\r\n   */\r\n  constructor(provider) {\r\n    if (!provider) {\r\n      throw new Error('A provider is required for GasEstimationService.');\r\n    }\r\n    this.web3 = new Web3(provider);\r\n    this.gasPriceCache = {\r\n      prices: null,\r\n      timestamp: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Fetches and caches gas prices.\r\n   * @param {boolean} forceRefresh - If true, fetches new prices regardless of cache.\r\n   * @returns {Promise<{slow: string, standard: string, fast: string}>}\r\n   */\r\n  async getGasPrices(forceRefresh = false) {\r\n    const now = Date.now();\r\n    if (!forceRefresh && this.gasPriceCache.prices && (now - this.gasPriceCache.timestamp < 60000)) { // 1-minute cache\r\n      return this.gasPriceCache.prices;\r\n    }\r\n\r\n    try {\r\n      const gasPrice = await this.web3.eth.getGasPrice(); // In Wei\r\n      const basePriceGwei = parseFloat(this.web3.utils.fromWei(gasPrice, 'gwei'));\r\n\r\n      const prices = {\r\n        slow: basePriceGwei.toFixed(2),\r\n        standard: (basePriceGwei * 1.2).toFixed(2),\r\n        fast: (basePriceGwei * 1.5).toFixed(2),\r\n      };\r\n      \r\n      this.gasPriceCache = { prices, timestamp: now };\r\n      return prices;\r\n    } catch (error) {\r\n      console.error('Error fetching gas prices:', error);\r\n      // Return fallback values\r\n      return { slow: '5', standard: '10', fast: '15' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Estimates the gas limit for a transaction.\r\n   * @param {object} tx - The transaction object.\r\n   * @returns {Promise<number>} The estimated gas limit with a buffer.\r\n   */\r\n  async estimateGasLimit(tx) {\r\n    try {\r\n      const gasLimit = await this.web3.eth.estimateGas(tx);\r\n      return Math.ceil(gasLimit * 1.2); // Add 20% buffer\r\n    } catch (error) {\r\n      console.error('Error estimating gas limit:', error);\r\n      return 100000; // Fallback gas limit\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the transaction fee.\r\n   * @param {string} speed - The desired speed ('slow', 'standard', 'fast').\r\n   * @param {number} gasLimit - The gas limit for the transaction.\r\n   * @returns {Promise<string>} The transaction fee in Ether.\r\n   */\r\n  async calculateFee(speed, gasLimit) {\r\n    const prices = await this.getGasPrices();\r\n    const priceGwei = prices[speed] || prices.standard;\r\n    const priceWei = this.web3.utils.toWei(priceGwei, 'gwei');\r\n    const feeWei = BigInt(priceWei) * BigInt(gasLimit);\r\n    return this.web3.utils.fromWei(feeWei.toString(), 'ether');\r\n  }\r\n\r\n  /**\r\n   * Calculates the maximum amount that can be sent, accounting for fees.\r\n   * @param {string} balance - The user's balance in Ether.\r\n   * @param {string} speed - The desired transaction speed.\r\n   * @param {number} gasLimit - The gas limit for the transaction.\r\n   * @returns {Promise<string>} The maximum transferable amount in Ether.\r\n   */\r\n  async getMaxAmount(balance, speed, gasLimit) {\r\n    const feeEther = await this.calculateFee(speed, gasLimit);\r\n    const balanceWei = BigInt(this.web3.utils.toWei(balance, 'ether'));\r\n    const feeWei = BigInt(this.web3.utils.toWei(feeEther, 'ether'));\r\n\r\n    if (balanceWei > feeWei) {\r\n      const maxAmountWei = balanceWei - feeWei;\r\n      return this.web3.utils.fromWei(maxAmountWei.toString(), 'ether');\r\n    }\r\n    return '0';\r\n  }\r\n}","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useWallet } from '../contexts/WalletContext';\r\nimport { GasEstimationService } from '../services/GasEstimationService';\r\n\r\nconst speedTiers = {\r\n  slow: { label: 'Slow', time: '~5-10 min' },\r\n  standard: { label: 'Standard', time: '~1-3 min' },\r\n  fast: { label: 'Fast', time: '< 1 min' },\r\n};\r\n\r\n/**\r\n * @component TransactionFee\r\n * @description A component to display and select transaction fees.\r\n */\r\nconst TransactionFee = ({ onFeeSelect, isNativeTransaction }) => {\r\n  const { client } = useWallet();\r\n  const [gasPrices, setGasPrices] = useState(null);\r\n  const [selectedSpeed, setSelectedSpeed] = useState('standard');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const gasService = useMemo(() => {\r\n    if (!client) return null;\r\n    return new GasEstimationService(client.transport);\r\n  }, [client]);\r\n\r\n  useEffect(() => {\r\n    if (!gasService || !isNativeTransaction) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchPrices = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const prices = await gasService.getGasPrices();\r\n        setGasPrices(prices);\r\n      } catch (err) {\r\n        console.error('Failed to fetch gas prices:', err);\r\n        setError('Could not load gas fees.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPrices();\r\n    const interval = setInterval(fetchPrices, 60000); // Refresh every 60 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [gasService, isNativeTransaction]);\r\n\r\n  useEffect(() => {\r\n    if (gasPrices && onFeeSelect) {\r\n      onFeeSelect({\r\n        speed: selectedSpeed,\r\n        gwei: gasPrices[selectedSpeed],\r\n      });\r\n    }\r\n  }, [selectedSpeed, gasPrices, onFeeSelect]);\r\n\r\n  if (!isNativeTransaction) {\r\n    return null; // Don't render for non-native token transactions\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div className=\"stablepay-fee-loading\">Loading fee estimates...</div>;\r\n  }\r\n  \r\n  if (error) {\r\n    return <div className=\"stablepay-fee-error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"stablepay-transaction-fee\">\r\n      <h4 className=\"stablepay-fee-title\">Transaction Speed</h4>\r\n      <div className=\"stablepay-fee-options\">\r\n        {Object.keys(speedTiers).map((speed) => (\r\n          <div\r\n            key={speed}\r\n            className={`stablepay-fee-option ${selectedSpeed === speed ? 'selected' : ''}`}\r\n            onClick={() => setSelectedSpeed(speed)}\r\n          >\r\n            <div className=\"stablepay-fee-label\">{speedTiers[speed].label}</div>\r\n            <div className=\"stablepay-fee-gwei\">{gasPrices[speed]} Gwei</div>\r\n            <div className=\"stablepay-fee-time\">{speedTiers[speed].time}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionFee;","import React, { useState } from \"react\";\r\nimport PayButton from \"./PayButton\";\r\nimport Dialog from \"./Dialog\";\r\nimport NetworkDropdown from \"./NetworkDropdown\";\r\nimport TokenDropdown from \"./TokenDropdown\";\r\nimport TransactionReview from \"./TransactionFee\";\r\nimport { NetworkProvider, useNetwork } from \"../contexts/NetworkContext\";\r\nimport { WalletContextProvider } from \"../contexts/WalletContext\";\r\nimport styles from \"../styles/PricingCard.css\";\r\n\r\nconst WidgetContent = ({ onClose, buttonSize }) => {\r\n  const { resetSelections } = useNetwork(); //\r\n\r\n  const handleClose = () => {\r\n    resetSelections();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} size={buttonSize}>\r\n      <NetworkDropdown />\r\n      <TokenDropdown />\r\n      <TransactionReview />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst WidgetWithProviders = ({ onClose, buttonSize, networkSelector }) => {\r\n  return (\r\n    <NetworkProvider networkSelector={networkSelector}>\r\n      <WalletContextProvider>\r\n        <WidgetContent onClose={onClose} buttonSize={buttonSize} />\r\n      </WalletContextProvider>\r\n    </NetworkProvider>\r\n  );\r\n};\r\n\r\nexport const Widget = ({ networkSelector, buttonSize = \"medium\" }) => {\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.widgetContainer}>\r\n      {!isDialogOpen && (\r\n        <PayButton onClick={handleOpenDialog} size={buttonSize} />\r\n      )}\r\n      {isDialogOpen && (\r\n        <WidgetWithProviders\r\n          onClose={handleCloseDialog}\r\n          buttonSize={buttonSize}\r\n          networkSelector={networkSelector}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","// src/utils/config.js\r\nexport const networksConfig = {\r\n  'sepolia': {\r\n    uri: 'https://ethereum-sepolia.publicnode.com/',\r\n    chainId: 11155111,\r\n    djedAddress: '0x624FcD0a1F9B5820c950FefD48087531d38387f4',\r\n    tokens: {\r\n      stablecoin: {\r\n        symbol: 'SOD',\r\n        address: '0x6b930182787F346F18666D167e8d32166dC5eFBD',\r\n        decimals: 18,\r\n        isDirectTransfer: true\r\n      },\r\n      native: {\r\n        symbol: 'ETH',\r\n        decimals: 18,\r\n        isNative: true\r\n      }\r\n    },\r\n    feeUI: 0\r\n  },\r\n  'milkomeda-mainnet': {\r\n    uri: 'https://rpc-mainnet-cardano-evm.c1.milkomeda.com',\r\n    chainId: 2001,\r\n    djedAddress: '0x67A30B399F5Ed499C1a6Bc0358FA6e42Ea4BCe76',\r\n    tokens: {\r\n      stablecoin: {\r\n        symbol: 'MOD',\r\n        address: '0xcbA90fB1003b9D1bc6a2b66257D2585011b004e9',\r\n        decimals: 18,\r\n        isDirectTransfer: true\r\n      },\r\n      native: {\r\n        symbol: 'mADA',\r\n        decimals: 18,\r\n        isNative: true\r\n      }\r\n    },\r\n    feeUI: 0\r\n  },\r\n  'ethereum-classic': {\r\n    uri: 'https://etc.rivet.link',\r\n    chainId: 61,\r\n    djedAddress: '0xCc3664d7021FD36B1Fe2b136e2324710c8442cCf',\r\n    tokens: {\r\n      stablecoin: {\r\n        symbol: 'ECSD',\r\n        address: '0x5A7Ca94F6E969C94bef4CE5e2f90ed9d4891918A',\r\n        decimals: 18,\r\n        isDirectTransfer: true\r\n      },\r\n      native: {\r\n        symbol: 'ETC',\r\n        decimals: 18,\r\n        isNative: true\r\n      }\r\n    },\r\n    feeUI: 0\r\n  }\r\n};","import { networksConfig } from \"../utils/config\";\r\n\r\nexport class MerchantConfig {\r\n  constructor(options = {}) {\r\n    this.receivingAddress = options.receivingAddress || \"\";\r\n    this.blacklist = options.blacklist || [];\r\n    this.amounts = options.Amounts || {}; // Note the capital 'A' in Amounts\r\n    this.validateConfig();\r\n  }\r\n\r\n  validateConfig() {\r\n    if (!this.receivingAddress) {\r\n      throw new Error(\"Receiving address is required\");\r\n    }\r\n    // Validate stablecoin amounts\r\n    for (const [network, tokens] of Object.entries(this.amounts)) {\r\n      if (!networksConfig[network]) {\r\n        throw new Error(`Invalid network: ${network}`);\r\n      }\r\n      if (\r\n        !tokens.stablecoin ||\r\n        typeof tokens.stablecoin !== \"number\" ||\r\n        tokens.stablecoin <= 0\r\n      ) {\r\n        throw new Error(`Invalid stablecoin amount for network ${network}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  getBlacklist() {\r\n    return this.blacklist;\r\n  }\r\n\r\n  getReceivingAddress() {\r\n    return this.receivingAddress;\r\n  }\r\n\r\n  // getTokenAmount(network, token) {\r\n  //   const networkConfig = networksConfig[network];\r\n  //   if (!networkConfig) return 0;\r\n\r\n  //   const stablecoinSymbol = networkConfig.tokens.stablecoin.symbol;\r\n\r\n  //   if (token === 'stablecoin') {\r\n  //     return this.amounts[network]?.stablecoin || 0;\r\n  //   }\r\n  //   // For native tokens, return 0 as it's not specified in the new structure\r\n  //   return 0;\r\n  // }\r\n  getTokenAmount(network) {\r\n    console.log(\"Getting amount for network:\", network);\r\n    console.log(\"Amounts object:\", this.amounts);\r\n\r\n    // Directly return the stablecoin amount for the network\r\n    const amount = this.amounts[network]?.stablecoin;\r\n    console.log(\"Returning amount:\", amount);\r\n\r\n    return amount || 0;\r\n  }\r\n}\r\n\r\nexport default MerchantConfig;\r\n","import { networksConfig } from \"../utils/config\";\r\n\r\nexport class NetworkSelector {\r\n  constructor(merchantConfig) {\r\n    this.merchantConfig = merchantConfig;\r\n    this.blacklist = merchantConfig.getBlacklist();\r\n    this.availableNetworks = this.getAvailableNetworks();\r\n    this.selectedNetwork = null;\r\n  }\r\n\r\n  getAvailableNetworks() {\r\n    return Object.entries(networksConfig).reduce(\r\n      (acc, [networkKey, networkConfig]) => {\r\n        if (!this.blacklist.includes(networkConfig.chainId)) {\r\n          acc[networkKey] = networkConfig;\r\n        }\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n\r\n  selectNetwork(networkKey) {\r\n    if (networkKey === null) {\r\n      this.selectedNetwork = null;\r\n      console.log(\"Network selection reset\");\r\n      return true;\r\n    }\r\n    if (this.availableNetworks[networkKey]) {\r\n      this.selectedNetwork = networkKey;\r\n      console.log(`Network selected: ${networkKey}`);\r\n      return true;\r\n    }\r\n    console.error(`Invalid network: ${networkKey}`);\r\n    return false;\r\n  }\r\n\r\n  getSelectedNetworkConfig() {\r\n    return this.selectedNetwork\r\n      ? this.availableNetworks[this.selectedNetwork]\r\n      : null;\r\n  }\r\n\r\n  getReceivingAddress() {\r\n    return this.merchantConfig.getReceivingAddress();\r\n  }\r\n\r\n  getTokenAmount(token) {\r\n    return this.merchantConfig.getTokenAmount(this.selectedNetwork, token);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { WalletContextProvider } from './contexts/WalletContext';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\nimport Widget from './widget/Widget';\r\n\r\n// Import your existing classes\r\nimport { MerchantConfig } from './core/MerchantConfig';\r\nimport { NetworkSelector } from './core/NetworkSelector';\r\n\r\n// Export everything for direct React usage\r\nexport { Widget } from './widget/Widget';\r\nexport { WalletContextProvider } from './contexts/WalletContext';\r\nexport { ThemeProvider } from './contexts/ThemeContext';\r\nexport { useWallet } from './contexts/WalletContext';\r\nexport { useNetwork } from './contexts/NetworkContext';\r\nexport { MerchantConfig } from './core/MerchantConfig';\r\nexport { NetworkSelector } from './core/NetworkSelector';\r\n\r\n/**\r\n * StablePay SDK - Main namespace\r\n * This allows both imperative (StablePay.init) and declarative (React components) usage\r\n */\r\nconst StablePay = {\r\n  // Your existing classes\r\n  MerchantConfig,\r\n  NetworkSelector,\r\n  Widget,\r\n  \r\n  /**\r\n   * Initialize StablePay widget imperatively\r\n   * This is useful for non-React apps or dynamic injection\r\n   * \r\n   * @param {Object} config\r\n   * @param {string} config.target - CSS selector for container\r\n   * @param {NetworkSelector} config.networkSelector - Your NetworkSelector instance\r\n   * @param {Object} [config.theme] - Theme configuration\r\n   * @param {string} [config.buttonSize='medium'] - Button size\r\n   * @returns {Object} Instance with destroy() method\r\n   */\r\n  init: ({ target, networkSelector, theme: themeConfig, buttonSize = 'medium', ...restConfig }) => {\r\n    const targetElement = document.querySelector(target);\r\n\r\n    if (!targetElement) {\r\n      console.error(`StablePay Error: Target element \"${target}\" not found.`);\r\n      return { destroy: () => {} };\r\n    }\r\n\r\n    if (!networkSelector) {\r\n      console.error('StablePay Error: `networkSelector` is required.');\r\n      return { destroy: () => {} };\r\n    }\r\n\r\n    const root = createRoot(targetElement);\r\n    \r\n    root.render(\r\n      <React.StrictMode>\r\n        <ThemeProvider themeConfig={themeConfig}>\r\n          <Widget \r\n            networkSelector={networkSelector} \r\n            buttonSize={buttonSize}\r\n            {...restConfig} \r\n          />\r\n        </ThemeProvider>\r\n      </React.StrictMode>\r\n    );\r\n\r\n    return {\r\n      destroy: () => {\r\n        root.unmount();\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\nexport default StablePay;"],"names":["m","process","env","NODE_ENV","createRoot","hydrateRoot","i","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","c","o","usingClientEntryPoint","MetaMaskAdapter","constructor","this","client","account","chainId","name","isAvailable","window","ethereum","isMetaMask","connect","Error","accounts","request","method","createWalletClient","chain","getChainConfig","transport","custom","error","console","disconnect","getClient","getAccount","getChainId","mainnet","sepolia","fs","path","os","crypto","version","TIPS","parseBoolean","value","includes","toLowerCase","Boolean","dim","text","stdout","isTTY","LINE","_debug","message","log","_log","_dotenvKey","options","DOTENV_KEY","length","_instructions","result","dotenvKey","uri","URL","code","err","key","password","environment","searchParams","get","environmentKey","toUpperCase","ciphertext","parsed","_vaultPath","possibleVaultPath","Array","isArray","filepath","existsSync","endsWith","resolve","cwd","_resolveHome","envPath","join","homedir","slice","DotenvModule","configDotenv","dotenvPath","encoding","processEnv","debug","DOTENV_CONFIG_DEBUG","quiet","DOTENV_CONFIG_QUIET","lastError","optionPaths","push","parsedAll","parse","readFileSync","populate","e","populated","keysCount","Object","keys","shortPaths","filePath","relative","Math","floor","random","_configVault","_parseVault","vaultPath","split","decrypted","attrs","trim","decrypt","config","encrypted","keyStr","Buffer","from","nonce","subarray","authTag","aesgcm","createDecipheriv","setAuthTag","update","final","isRange","RangeError","invalidKeyLength","decryptionFailed","src","obj","match","lines","toString","replace","exec","maybeQuote","override","prototype","hasOwnProperty","call","mainModule","exports","WalletConnectAdapter","provider","projectId","PROJECT_ID","EthereumProvider","init","chains","showQrModal","enable","getAddresses","CoinbaseWalletAdapter","isCoinbaseWallet","providers","find","p","getProvider","SESSION_STORAGE_KEY","ENCRYPTION_KEY","WalletProvider","adapters","metamask","walletconnect","coinbase","activeAdapter","walletName","adapter","saveSession","clearSession","session","timestamp","Date","now","encryptedSession","CryptoJS","AES","encrypt","JSON","stringify","localStorage","setItem","removeItem","restoreSession","getItem","bytes","decryptedSession","enc","Utf8","getAvailableWallets","values","filter","map","id","WalletContext","createContext","useWallet","context","useContext","WalletContextProvider","children","walletProvider","useState","WalletProviderClass","setClient","setAccount","setError","isConnecting","setIsConnecting","isLoading","setIsLoading","useCallback","async","newClient","newAccount","useEffect","restore","React","createElement","Provider","defaultThemes","light","dark","ThemeContext","ThemeProvider","themeConfig","mode","initialMode","customTheme","themeMode","setThemeMode","mergedThemes","useMemo","merged","assign","root","document","documentElement","applyTheme","theme","forEach","style","setProperty","setAttribute","handleSystemThemeChange","newMode","matches","systemThemeMatcher","matchMedia","addEventListener","removeEventListener","setTheme","warn","PayButton","onClick","size","sizeStyles","small","width","height","fontSize","medium","large","logoSizes","buttonStyle","logoStyle","className","styles","Dialog","onClose","dialogOverlay","pricingCard","dialogClose","pricingCardHeader","allianceLogo","stablepayTitle","pricingCardBody","TokenSelector","networkSelector","selectedToken","selectToken","tokenKey","networkConfig","getSelectedNetworkConfig","tokens","getSelectedToken","getAvailableTokens","entries","resetSelection","NetworkContext","NetworkProvider","tokenSelector","selectedNetwork","setSelectedNetwork","setSelectedToken","transactionDetails","setTransactionDetails","resetState","selectNetwork","networkKey","token","resetSelections","useNetwork","undefined","NetworkDropdown","selectField","htmlFor","onChange","event","target","disabled","availableNetworks","Transaction","networkUri","djedAddress","web3","getWeb3","djedContract","getDjedContract","stableCoin","reserveCoin","getCoinContracts","scDecimals","rcDecimals","getDecimals","oracleContract","getOracleAddress","then","addr","getOracleContract","_address","oracleAddress","getBlockchainDetails","web3Available","djedContractAvailable","stableCoinAddress","reserveCoinAddress","stableCoinDecimals","reserveCoinDecimals","oracleContractAvailable","handleTradeDataBuySc","amountScaled","tradeDataPriceBuySc","totalBCScaled","TokenDropdown","loading","setLoading","availableTokens","newValue","transaction","tokenAmount","getTokenAmount","blockchainDetails","tradeData","String","network","tokenSymbol","symbol","amount","receivingAddress","getReceivingAddress","djedContractAddress","isDirectTransfer","isNativeToken","isNative","tradeAmount","GasEstimationService","Web3","gasPriceCache","prices","getGasPrices","forceRefresh","gasPrice","eth","getGasPrice","basePriceGwei","parseFloat","utils","fromWei","slow","toFixed","standard","fast","estimateGasLimit","tx","gasLimit","estimateGas","ceil","calculateFee","speed","priceGwei","priceWei","toWei","feeWei","BigInt","getMaxAmount","balance","feeEther","balanceWei","maxAmountWei","speedTiers","label","time","TransactionFee","onFeeSelect","isNativeTransaction","gasPrices","setGasPrices","selectedSpeed","setSelectedSpeed","gasService","fetchPrices","interval","setInterval","clearInterval","gwei","WidgetContent","buttonSize","handleClose","TransactionReview","WidgetWithProviders","Widget","isDialogOpen","setIsDialogOpen","widgetContainer","handleOpenDialog","handleCloseDialog","networksConfig","stablecoin","address","decimals","native","feeUI","MerchantConfig","blacklist","amounts","Amounts","validateConfig","getBlacklist","NetworkSelector","merchantConfig","getAvailableNetworks","reduce","acc","StablePay","restConfig","targetElement","querySelector","destroy","render","StrictMode","_extends","unmount"],"mappings":"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","x_google_ignoreList":[0,2]}