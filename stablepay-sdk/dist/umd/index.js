!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("djed-sdk"),require("react"),require("viem"),require("viem/chains")):"function"==typeof define&&define.amd?define(["djed-sdk","react","viem","viem/chains"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).StablePay=t(e.DjedSdk,e.React,e.viem,e.viemChains)}(this,(function(e,t,n,r){"use strict";const a={sepolia:{uri:"https://ethereum-sepolia.publicnode.com/",chainId:11155111,djedAddress:"0x624FcD0a1F9B5820c950FefD48087531d38387f4",tokens:{stablecoin:{symbol:"SOD",address:"0x6b930182787F346F18666D167e8d32166dC5eFBD",decimals:18,isDirectTransfer:!0},native:{symbol:"ETH",decimals:18,isNative:!0}},feeUI:0},"milkomeda-mainnet":{uri:"https://rpc-mainnet-cardano-evm.c1.milkomeda.com",chainId:2001,djedAddress:"0x67A30B399F5Ed499C1a6Bc0358FA6e42Ea4BCe76",tokens:{stablecoin:{symbol:"MOD",address:"0xcbA90fB1003b9D1bc6a2b66257D2585011b004e9",decimals:18,isDirectTransfer:!0},native:{symbol:"mADA",decimals:18,isNative:!0}},feeUI:0},"ethereum-classic":{uri:"https://etc.rivet.link",chainId:61,djedAddress:"0xCc3664d7021FD36B1Fe2b136e2324710c8442cCf",tokens:{stablecoin:{symbol:"ECSD",address:"0x5A7Ca94F6E969C94bef4CE5e2f90ed9d4891918A",decimals:18,isDirectTransfer:!0},native:{symbol:"ETC",decimals:18,isNative:!0}},feeUI:0}};class i{constructor(e,t){this.networkUri=e,this.djedAddress=t}async init(){if(!this.networkUri||!this.djedAddress)throw new Error("Network URI and DJED address are required");try{this.web3=await e.getWeb3(this.networkUri),this.djedContract=e.getDjedContract(this.web3,this.djedAddress);const{stableCoin:t,reserveCoin:n}=await e.getCoinContracts(this.djedContract,this.web3),{scDecimals:r,rcDecimals:a}=await e.getDecimals(t,n);this.stableCoin=t,this.reserveCoin=n,this.scDecimals=r,this.rcDecimals=a,this.oracleContract=await e.getOracleAddress(this.djedContract).then((t=>e.getOracleContract(this.web3,t,this.djedContract._address))),this.oracleAddress=this.oracleContract._address,console.log("Transaction initialized successfully")}catch(e){throw console.error("Error initializing transaction:",e),e}}getBlockchainDetails(){return{web3Available:!!this.web3,djedContractAvailable:!!this.djedContract,stableCoinAddress:this.stableCoin?this.stableCoin._address:"N/A",reserveCoinAddress:this.reserveCoin?this.reserveCoin._address:"N/A",stableCoinDecimals:this.scDecimals,reserveCoinDecimals:this.rcDecimals,oracleAddress:this.oracleAddress||"N/A",oracleContractAvailable:!!this.oracleContract}}async handleTradeDataBuySc(t){if(!this.djedContract)throw new Error("DJED contract is not initialized");if("string"!=typeof t)throw new Error("Amount must be a string");try{return(await e.tradeDataPriceBuySc(this.djedContract,this.scDecimals,t)).totalBCScaled}catch(e){throw console.error("Error fetching trade data for buying stablecoins: ",e),e}}}var s="main_stablePayButton__UA7HC",o="main_logo__ITyEy",l="main_buttonText__N-ewy";const c=({onClick:e,size:n="medium"})=>{const r={small:{width:"200px",height:"50px",fontSize:"14px"},medium:{width:"250px",height:"60px",fontSize:"16px"},large:{width:"300px",height:"70px",fontSize:"18px"}},a={small:{width:"35px",height:"33px"},medium:{width:"40px",height:"38px"},large:{width:"45px",height:"43px"}},i=r[n]||r.medium,c=a[n]||a.medium;return t.createElement("button",{className:s,onClick:e,style:i},t.createElement("div",{className:o,style:c}),t.createElement("span",{className:l},"Pay with StablePay"))};var d={dialogOverlay:"PricingCard_dialogOverlay__0XJrE",pricingCard:"PricingCard_pricingCard__LrWb9",small:"PricingCard_small__J4CHj",medium:"PricingCard_medium__EVmTB",large:"PricingCard_large__A6pnX",dialogClose:"PricingCard_dialogClose__jJ1tM",pricingCardHeader:"PricingCard_pricingCardHeader__wGczA",allianceLogo:"PricingCard_allianceLogo__URa-U",stablepayTitle:"PricingCard_stablepayTitle__4t848",pricingCardBody:"PricingCard_pricingCardBody__0wKQn",selectField:"PricingCard_selectField__LBPoZ",transactionReview:"PricingCard_transactionReview__Ix-eL",transactionInfo:"PricingCard_transactionInfo__Ck-Rc",transactionLabel:"PricingCard_transactionLabel__GDux7",transactionValue:"PricingCard_transactionValue__q-xxp",infoSection:"PricingCard_infoSection__gyjMQ",infoIcon:"PricingCard_infoIcon__rraxD",infoText:"PricingCard_infoText__l4b7A",walletButton:"PricingCard_walletButton__llw4v",loading:"PricingCard_loading__2-tGA",error:"PricingCard_error__m5fK-",networkError:"PricingCard_networkError__zR-36",errorText:"PricingCard_errorText__qZRJt"};const u=({children:e,onClose:n,size:r="medium"})=>t.createElement("div",{className:d.dialogOverlay},t.createElement("div",{className:`${d.pricingCard} ${d[r]}`},t.createElement("button",{className:d.dialogClose,onClick:n},"Ã—"),t.createElement("div",{className:d.pricingCardHeader},t.createElement("div",{className:d.allianceLogo}),t.createElement("h2",{className:d.stablepayTitle},"StablePay")),t.createElement("div",{className:d.pricingCardBody},e)));class m{constructor(e){this.networkSelector=e,this.selectedToken=null}selectToken(e){const t=this.networkSelector.getSelectedNetworkConfig();return!(!t||!t.tokens[e])&&(this.selectedToken={key:e,...t.tokens[e]},!0)}getSelectedToken(){return this.selectedToken}getAvailableTokens(){const e=this.networkSelector.getSelectedNetworkConfig();return e?Object.entries(e.tokens).map((([e,t])=>({key:e,...t}))):[]}resetSelection(){this.selectedToken=null}}const h=t.createContext(),g=({children:e,networkSelector:n})=>{const[r]=t.useState((()=>new m(n))),[a,i]=t.useState(null),[s,o]=t.useState(null),[l,c]=t.useState(null),d=()=>{o(null),c(null)};return t.useEffect((()=>{i(n.selectedNetwork)}),[n.selectedNetwork]),t.createElement(h.Provider,{value:{networkSelector:n,tokenSelector:r,selectedNetwork:a,selectedToken:s,transactionDetails:l,setTransactionDetails:c,selectNetwork:e=>!!n.selectNetwork(e)&&(i(e),d(),!0),selectToken:e=>{if(r.selectToken(e)){const e=r.getSelectedToken();return o(e),!0}return!1},resetSelections:()=>{n.selectNetwork(null),i(null),d()}}},e)},k=()=>{const e=t.useContext(h);if(void 0===e)throw new Error("useNetwork must be used within a NetworkProvider");return e},w=()=>{const{networkSelector:e,selectedNetwork:n,selectNetwork:r}=k();return t.createElement("div",{className:d.selectField},t.createElement("label",{htmlFor:"network-select"},"Select Network"),t.createElement("select",{id:"network-select",onChange:e=>{r(e.target.value)},value:n||""},t.createElement("option",{value:"",disabled:!0},"Select a network"),Object.keys(e.availableNetworks).map((e=>t.createElement("option",{key:e,value:e},e)))))},C=()=>{const{networkSelector:e,tokenSelector:n,selectedNetwork:r,selectedToken:a,selectToken:s,setTransactionDetails:o}=k(),[l,c]=t.useState(!1),[u,m]=t.useState(null),h=r?n.getAvailableTokens():[];return t.createElement("div",{className:d.selectField},t.createElement("label",{htmlFor:"token-select"},"Select Token"),t.createElement("select",{id:"token-select",onChange:async t=>{const a=t.target.value;m(null),c(!0);try{if(s(a)){const t=e.getSelectedNetworkConfig(),s=new i(t.uri,t.djedAddress);await s.init();const l=e.getTokenAmount(a),c=s.getBlockchainDetails();let d=null;"native"===a&&(d=await s.handleTradeDataBuySc(String(l))),o({network:r,token:a,tokenSymbol:n.getSelectedToken().symbol,amount:l,receivingAddress:e.getReceivingAddress(),djedContractAddress:t.djedAddress,isDirectTransfer:n.getSelectedToken().isDirectTransfer||!1,isNativeToken:n.getSelectedToken().isNative||!1,tradeAmount:d?d.amount:null,...c})}}catch(e){console.error("Error fetching transaction details:",e),m("Failed to fetch transaction details. Please try again.")}finally{c(!1)}},value:a?a.key:"",disabled:!r||l},t.createElement("option",{value:"",disabled:!0},r?l?"Loading...":"Select a token":"Please select a network first"),h.map((e=>t.createElement("option",{key:e.key,value:e.key},e.symbol," (",e.isDirectTransfer?"Direct Transfer":"Native",")")))),u&&t.createElement("div",{className:d.error},u))},b=t.createContext(null),v=({children:e,networkConfig:a})=>{const[i,s]=t.useState(null),[o,l]=t.useState(null),[c,d]=t.useState(null),[u,m]=t.useState(null),[h,g]=t.useState(!1),[k,w]=t.useState(null),C=e=>({1:r.mainnet,11155111:r.sepolia}[e]),v=async e=>{const t=f();if(e!==t){const e=`Wrong network detected. Please switch to ${y(t)}`;return console.log(e),w(e),!1}return w(null),!0},f=()=>11155111,y=e=>({1:"Ethereum Mainnet",11155111:"Sepolia Testnet"}[e]||"Unknown Network"),_=t.useCallback((async()=>{if(!window.ethereum)return m("Please install MetaMask or another Web3 wallet"),!1;g(!0),m(null);try{const e=await window.ethereum.request({method:"eth_requestAccounts"}),t=await window.ethereum.request({method:"eth_chainId"}),r=parseInt(t,16);await v(r);const a=C(r);if(!a)throw new Error("Unsupported chain");const i=n.createWalletClient({chain:a,transport:n.custom(window.ethereum)});return s(i),l(e[0]),d(r),window.ethereum.on("accountsChanged",E),window.ethereum.on("chainChanged",S),!0}catch(e){return console.error("Error connecting wallet:",e),m(e.message),!1}finally{g(!1)}}),[]),S=async e=>{const t=parseInt(e,16);d(t),await v(t);const r=C(t);if(r&&window.ethereum){const e=n.createWalletClient({chain:r,transport:n.custom(window.ethereum)});s(e)}},N=t.useCallback((()=>{s(null),l(null),d(null),w(null),window.ethereum&&(window.ethereum.removeListener("accountsChanged",E),window.ethereum.removeListener("chainChanged",S))}),[]),E=e=>{0===e.length?N():l(e[0])};return t.createElement(b.Provider,{value:{walletClient:i,account:o,chainId:c,error:u,networkError:k,isConnecting:h,connectWallet:_,disconnectWallet:N,checkNetwork:v}},e)},f=()=>{const{networkSelector:e,tokenSelector:n,selectedNetwork:r,selectedToken:a,transactionDetails:s,setTransactionDetails:o}=k(),{connectWallet:l,account:c,chainId:u,error:m,networkError:h,isConnecting:g}=(()=>{const e=t.useContext(b);if(!e)throw new Error("useWallet must be used within a WalletProvider");return e})(),[w,C]=t.useState(null),[v,f]=t.useState(null),[y,_]=t.useState(!1),[S,N]=t.useState(null);t.useEffect((()=>{(async()=>{if(r&&a){_(!0),N(null);try{const t=e.getSelectedNetworkConfig(),n=e.getReceivingAddress(),s=e.getTokenAmount(a.key);console.log("Selected Token Key:",a.key),console.log("Token Amount:",s);const l=new i(t.uri,t.djedAddress);await l.init(),C(l);const c=l.getBlockchainDetails();console.log("Blockchain Details:",c);let d=null;if("native"===a.key){console.log("Fetching trade data for native token");try{const e=String(s);d=await l.handleTradeDataBuySc(e),console.log("Trade data fetched:",d),f(d)}catch(e){console.error("Error fetching trade data:",e)}}else console.log("Stablecoin selected, skipping trade data fetch");console.log("Debug Information:",{tokenType:a.key,isDirectTransfer:a.isDirectTransfer,isNativeToken:a.isNative,tradeData:d,receivingAddress:n,djedContractAddress:t.djedAddress,blockchainDetails:c});const u={network:r,token:a.key,tokenSymbol:a.symbol,amount:s,receivingAddress:n,djedContractAddress:t.djedAddress,isDirectTransfer:a.isDirectTransfer||!1,isNativeToken:a.isNative||!1,tradeAmount:d?d.amount:null,...c};o(u)}catch(e){console.error("Error initializing transaction:",e),N("Failed to initialize transaction. Please try again.")}finally{_(!1)}}})()}),[r,a,e,o]);return y?t.createElement("div",{className:d.loading},"Loading transaction details..."):S?t.createElement("div",{className:d.error},S):r&&a&&s?t.createElement("div",{className:d.transactionReview},t.createElement("div",{className:d.transactionInfo},t.createElement("span",{className:d.transactionLabel},"Network:"),t.createElement("span",{className:d.transactionValue},s.network)),t.createElement("div",{className:d.transactionInfo},t.createElement("span",{className:d.transactionLabel},"You Pay:"),t.createElement("span",{className:d.transactionValue},"stablecoin"===a.key?`${s.amount} ${s.tokenSymbol}`:`${v||"Calculating..."} ${s.tokenSymbol}`)),t.createElement("div",{className:d.transactionInfo},t.createElement("span",{className:d.transactionLabel},"Merchant Receives:"),t.createElement("span",{className:d.transactionValue},`${s.amount} ${"stablecoin"===a.key?s.tokenSymbol:e.getSelectedNetworkConfig().tokens.stablecoin.symbol}`)),t.createElement("button",{className:d.walletButton,onClick:async()=>{await l()&&console.log("Wallet connected:",c)},disabled:g},g?"Connecting...":"Connect Wallet")):null},y=({onClose:e,buttonSize:n})=>{const{resetSelections:r}=k();return t.createElement(u,{onClose:()=>{r(),e()},size:n},t.createElement(w,null),t.createElement(C,null),t.createElement(f,null))},_=({onClose:e,buttonSize:n,networkSelector:r})=>t.createElement(g,{networkSelector:r},t.createElement(v,null,t.createElement(y,{onClose:e,buttonSize:n})));return{NetworkSelector:class{constructor(e){this.merchantConfig=e,this.blacklist=e.getBlacklist(),this.availableNetworks=this.getAvailableNetworks(),this.selectedNetwork=null}getAvailableNetworks(){return Object.entries(a).reduce(((e,[t,n])=>(this.blacklist.includes(n.chainId)||(e[t]=n),e)),{})}selectNetwork(e){return null===e?(this.selectedNetwork=null,console.log("Network selection reset"),!0):this.availableNetworks[e]?(this.selectedNetwork=e,console.log(`Network selected: ${e}`),!0):(console.error(`Invalid network: ${e}`),!1)}getSelectedNetworkConfig(){return this.selectedNetwork?this.availableNetworks[this.selectedNetwork]:null}getReceivingAddress(){return this.merchantConfig.getReceivingAddress()}getTokenAmount(e){return this.merchantConfig.getTokenAmount(this.selectedNetwork,e)}},Transaction:i,MerchantConfig:class{constructor(e={}){this.receivingAddress=e.receivingAddress||"",this.blacklist=e.blacklist||[],this.amounts=e.Amounts||{},this.validateConfig()}validateConfig(){if(!this.receivingAddress)throw new Error("Receiving address is required");for(const[e,t]of Object.entries(this.amounts)){if(!a[e])throw new Error(`Invalid network: ${e}`);if(!t.stablecoin||"number"!=typeof t.stablecoin||t.stablecoin<=0)throw new Error(`Invalid stablecoin amount for network ${e}`)}}getBlacklist(){return this.blacklist}getReceivingAddress(){return this.receivingAddress}getTokenAmount(e){console.log("Getting amount for network:",e),console.log("Amounts object:",this.amounts);const t=this.amounts[e]?.stablecoin;return console.log("Returning amount:",t),t||0}},Widget:({networkSelector:e,buttonSize:n="medium"})=>{const[r,a]=t.useState(!1);return t.createElement("div",{className:d.widgetContainer},!r&&t.createElement(c,{onClick:()=>{a(!0)},size:n}),r&&t.createElement(_,{onClose:()=>{a(!1)},buttonSize:n,networkSelector:e}))},PayButton:c,Dialog:u,NetworkDropdown:w}}));
//# sourceMappingURL=index.js.map
